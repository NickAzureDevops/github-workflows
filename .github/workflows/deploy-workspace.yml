name: "Workspace Deploy"

on:
  push:
    branches:
      - invoke-pipeline-across-repositories
  workflow_dispatch:
    inputs:     
      terraform_workspace_name:
        required: false
        type: string  
      terraform_workspace_destroy:
        required: false
        type: boolean

permissions:
  id-token: write
  contents: read

env: 
  terraform_actions_working_dir: ${{ github.workspace }}/terraform/

jobs:
  create_workspace:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: TF workspace
        uses: NickAzureDevops/github-workflows/.github/actions/terraform-workspace@invoke-pipeline-across-repositories
        if: ${{ inputs.terraform_workspace_name }}
        with:
          terraform_workspace_name: ${{ inputs.terraform_workspace_name }}
          terraform_version: 1.3.7
          terraform_workspace_destroy: true
      
  destroy_workspace:
    needs: create_workspace
    runs-on: ubuntu-latest
    steps:
      - name: Terraform Destroy All workspace
        run: |
          terraform workspace list || terraform workspace select {} && terraform destroy -auto-approve
        shell: bash

  Plan_Dev:
    needs: create_workspace
    uses: NickAzureDevops/github-workflows/.github/workflows/terraform-plan.yml@main
    with:
      path: terraform             
      tf_version: latest
      tfbucketname : tfstate-nick1       
      tf_key: terraform-dev          
      tf_vars_file: terraform.tfvars
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}            
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}     
      
  DeployDev:
    needs: Plan_Dev
    uses: NickAzureDevops/github-workflows/.github/workflows/terraform_apply.yml@main
    with:
      path: terraform             
      tf_version: latest 
      tfbucketname : tfstate-nick1              
      tf_key: terraform-dev            
      tf_vars_file: terraform.tfvars
      tf_environment: dev
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}            
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}     
