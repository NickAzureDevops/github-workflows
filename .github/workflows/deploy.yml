name: "deploy_dev"
on:
  workflow_dispatch:
    
jobs:
  aws_authentication:
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.otp.outputs.test }}
    steps:
      - uses: actions/checkout@v3
      - uses: step-security/wait-for-secrets@v1
        id: otp
        with:
          secrets: |
            AWS_Authencation: 
              name: 'Authenticate to AWS from 2FA'
              description: 'Authenicating to AWS, please wait'
      - run: |
          echo ${{ steps.get-otp.outputs.AWS_Authencation }}  >> $GITHUB_OUTPUT

  Plan_Dev:
    needs: aws_authentication
    uses: CloudwithNicholas/github-workflows/.github/workflows/terraform-plan.yml@invoke-pipeline-across-repositories
    with:
      path: terraform             
      tf_version: latest
      tfbucketname : tfstate-nick       
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}            
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}   

  DeployDev:
    needs: Plan_Dev
    uses: CloudwithNicholas/github-workflows/.github/workflows/terraform_apply.yml@invoke-pipeline-across-repositories
    with:
      path: terraform             
      tf_version: latest 
      tfbucketname : tfstate-nick              
      tf_environment: dev
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}            
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}    



name: Release new action version
on:
  workflow_dispatch:
    inputs:
      TAG_NAME:
        description: 'Tag name that the major tag will point to'
        required: true

env:
  TAG_NAME: ${{ github.event.inputs.TAG_NAME || github.event.release.tag_name }}
defaults:
  run:
    shell: pwsh

permissions:  # added using https://github.com/step-security/secure-workflows
  contents: read

jobs:
  update_tag:
    permissions:
      id-token: write
    name: Update the major tag to include the ${{ github.event.inputs.TAG_NAME || github.event.release.tag_name }} changes
    # Remember to configure the releaseNewActionVersion environment with required approvers in the repository settings
    environment:
      name: releaseNewActionVersion
    runs-on: ubuntu-latest
    steps:
    - uses: step-security/harden-runner@18bf8ad2ca49c14cbb28b91346d626ccfb00c518
      with:
        allowed-endpoints: 
          api.github.com:443
          github.com:443
          prod.api.stepsecurity.io:443

    - uses: step-security/wait-for-secrets@main
      id: wait-for-secrets
      with:
        secrets: |
          PAT: 
            name: PAT to create tag
            description: Generate new PAT and delete after release
    - name: Update the ${{ env.TAG_NAME }} tag
      uses: step-security/publish-action@b438f840875fdcb7d1de4fc3d1d30e86cf6acb5d
      with:
        source-tag: ${{ env.TAG_NAME }}
        token: ${{ steps.wait-for-secrets.outputs.PAT }} 
