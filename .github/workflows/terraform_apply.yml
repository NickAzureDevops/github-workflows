name: "build_apply"
on:
  workflow_call:
    inputs:
      path:
        description: 'Specifies the path of the root terraform module.'
        required: true
        type: string
      tf_version:
        description: 'Specifies version of Terraform to use. e.g: 1.1.0 Default=latest.'
        required: false
        type: string
        default: latest
      tf_environment:
        description: 'Specifies the GitHub deployment environment.'
        required: false
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        description: 'AWS Access Key ID.'
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: 'AWS Secret Access Key.'
        required: true
        
jobs:
  build-plan:
    runs-on: ubuntu-latest
    environment: ${{ inputs.tf_environment }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.path }}
    env:
      tfbucketname: tfstate-nick1
      # TF_KEY: ${{ inputs.tf_key }}.tfstate
      # TF_VARS: ${{ inputs.tf_vars_file }}
      ###AZURE Client details###
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_KEY: terraform.tfstate

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3.0.2
        with:
          name: ${{ inputs.tf_key }}
          path: ${{ inputs.path }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: ${{ inputs.tf_version }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt --check

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=${{ env.tfbucketname }}" --backend-config="key=${{ env.TF_KEY }}"
      
      - name: Terraform Plan
        id: plan
        run: terraform plan --out=plan.tfplan
        continue-on-error: true

      - name: Terraform Apply
        run: terraform apply plan.tfplan