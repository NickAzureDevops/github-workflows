name: "Build_Apply"
on:
  workflow_call:
    inputs:
      path:
        description: 'Specifies the path of the root terraform module.'
        required: true
        type: string
      tf_version:
        description: 'Specifies version of Terraform to use. e.g: 1.1.0 Default=latest.'
        required: false
        type: string
        default: latest
      tfbucketname:
        description: 'Specifies the AWS Bucket account container where backend Terraform state is hosted.'
        required: true
        type: string
      tf_environment:
        description: 'Specifies the GitHub deployment environment.'
        required: false
        type: string
        default: null
    secrets:
      AWS_ACCESS_KEY_ID:
        description: 'AWS Access Key ID.'
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: 'AWS Secret Access Key.'
        required: true
        
jobs:
  build-plan:
    runs-on: ubuntu-latest
    environment: ${{ inputs.tf_environment }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.path }}
    env:
      tfbucketname: ${{ inputs.tfbucketname }}
      ###AZURE Client details###
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  
    steps:
      # - name: Download Artifact
      #   uses: actions/download-artifact@v3.0.2
      #   with:
      #     name: ${{ inputs.tf_key }}
      #     path: ${{ inputs.path }}
      
      # - name: Decompress TF Plan artifact
      #   run: unzip ${{ inputs.tf_key }}.zip

      - name: Checkout
        uses: actions/checkout@v3.3.0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: ${{ inputs.tf_version }}

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=${{ env.tfbucketname }}"
      
      - name: Terraform Plan
        id: plan
        run: terraform plan 
        continue-on-error: true

      - name: Terraform Apply
        run: terraform apply plan.tfplan