name: "deploy_dev"
on:
  workflow_dispatch:

jobs:
  aws_authenication:
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    outputs:
      some_var: ${{ steps.step1.outputs.some_var }}
    steps:
      - name: Configure AWS Credentials
        uses: fuller-inc/actions-aws-assume-role@v1
        with:
          aws-region: eu-west-2
          role-to-assume: arn:aws:iam::184353012435:role/poc_github


      # - uses: actions/checkout@v3
      # - uses: step-security/wait-for-secrets@v1
      #   id: get-otp
      #   with:
      #     secrets: |
      #       authenication: 
      #         name: '2FA secret'
      #         description: 'Please Enter your 2FA Token' 
      # - run: |
      #     echo ${{ steps.get-otp.outputs.authenication }} >> $GITHUB_OUTPUT

  # job1:
  #   uses: CloudwithNicholas/github-workflows/.github/workflows/reuseable-output.yml@invoke-pipeline-across-repositories

  # job2:
  #   runs-on: ubuntu-latest
  #   needs: job1
  #   steps:
  #     - run: echo ${{ needs.job1.outputs.firstword }} 
  
  Plan_Dev:
    needs: aws_authenication
    uses: CloudwithNicholas/github-workflows/.github/workflows/terraform-plan.yml@invoke-pipeline-across-repositories
    with:
      path: terraform             
      tf_version: latest
      tfbucketname : tfstate-nick       
      tf_key: terraform-dev          
      tf_vars_file: terraform.tfvars
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}            
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}     

  DeployDev:
    needs: Plan_Dev
    uses: CloudwithNicholas/github-workflows/.github/workflows/terraform_apply.yml@invoke-pipeline-across-repositories
    with:
      path: terraform             
      tf_version: latest 
      tfbucketname : tfstate-nick              
      tf_key: terraform-dev            
      tf_vars_file: terraform.tfvars
      tf_environment: dev
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}            
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}     
