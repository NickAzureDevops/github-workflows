name: "build_plan"
on:
  workflow_call:
    inputs:
      path:
        description: 'Specifies the path of the root terraform module.'
        required: true
        type: string
      tf_version:
        description: 'Specifies version of Terraform to use. e.g: 1.1.0 Default=latest.'
        required: false
        type: string
        default: latest
      tfbucketname:
        description: 'Specifies the AWS Bucket account container where backend Terraform state is hosted.'
        required: true
        type: string
      tf_key:
        description: 'Specifies the Terraform state file name for this plan. Workflow artifact will use same name'
        required: true
        type: string
      environment:
        description: 'Specifies the GitHub deployment environment.'
        required: true
        type: string
        default: null
      # tf_vars_file:
      #   description: 'Specifies the Terraform tfvars.'
      #   required: true
      #   type: string
      terraform_workspace_name:
        description: 'Specifies the Terraform workspace name.'
        required: false
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        description: 'AWS Access Key ID'
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: 'AWS Secret Access Key'
        required: true

env: 
  terraform_actions_working_dir: ${{ github.workspace }}/terraform/

jobs:
  build-plan:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.path }}
    env:
      tfbucketname: ${{ inputs.tfbucketname }}
      TF_KEY: ${{ inputs.tf_key }}.tfstate
      TF_VARS: ${{ inputs.tf_vars_file }}
  
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: ${{ inputs.tf_version }}   

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=${{ env.tfbucketname }}" --backend-config="key=$TF_KEY" --var-file="../etc/terraform${{ env.WORKSPACE}}.tfvars"

      - name: TF workspace
        uses: NickAzureDevops/github-workflows/.github/actions/terraform-workspace@main
        with:
          terraform_workspace_name: ${{ inputs.terraform_workspace_name }}
          terraform_version: 1.3.7
          
      - name: Create Workspace tfvars
        run: |
          cp ../etc/terraform.tfvars ../etc/terraform${{ env.WORKSPACE }}.tfvars      
  
      - name: Terraform Plan
        id: plan
        run: terraform plan --var-file=$TF_VARS --out=plan.tfplan  
        continue-on-error: true
           
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: ls
        run: terraform workspace list
            
      - name: Terraform Apply
        # if: github.ref == 'refs/heads/main'
        run: terraform apply plan.tfplan
      
      - name: Download TF Plan
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.tf_key }}
          path: "${{ inputs.path }}/plan.tfplan"